@charset "utf8";
@import url('https://fonts.googleapis.com/css2?family=Bebas+Neue&display=swap');
@font-face {
    font-family: 'Android';
    src: url('../fontes/idroid.otf') format('opentype');
    font-weight: normal;
}
*{
    margin: 0px;
    padding: 0px;
}

:root{ /* Com esse comando, consigo colocar variáveis, que ao invés de ficar digitando a cor, coloco somente a variável, futuramente, qualqeur alteração, faço somente neste comando que vai altera tudo. obs: sempre que pressiono CTR+espaço, essas opções ficam em baixo de tudo.*/
    --cor0: #c5ebd6;
    --cor1: #83e1ad;
    --cor2: #3ddc84;
    --cor3: #2fa866;
    --cor4: #1a5c37;
    --cor5: #063d1e;

    --fonte-padrao: arial, Verdana, Helvetica, sans-serif;
    --fonte-destaque: 'Bebas Neue', cursive; 
    --fonte-android: 'Android', cursive;
}

body{
    background-color: #c5ebd6;
    font-family:var(--fonte-padrao) ;
    /*margin: auto --> centraliza o documento no meio*/
}

header{
    background-image: linear-gradient(to bottom, var(--cor3), var(--cor5));
    background-color: var(--cor4);
    min-height: 150px; /* Altura mínima do cabeçalho, para que seja responsível.*/
    text-align: center; /*caso não funcionasse esse text-align, deveria colocar individualmente em header > h1 e header > p*/
    padding-top: 40px;
   
}

header > h1{
    color: var(--cor5);
    font-family: var(--fonte-destaque);
    font-size: 3em;
    color: white;
    /*margin-top: 10px; --> esse comando não funcionou, então, coloquei uma padding top no campo header.*/
    margin-bottom: 20px;
    text-shadow: 2px 2px 10px rgba(0, 0, 0, 0.466);
}

header > p{
    font-family: var(--fonte-padrao);
    font-size: 1.2em;
    color: white;
    max-width: 600px; /*tamanho máximo para a medida que a tela diminui, ele comprima o texto deixando uma largura máxima de 600px, essa medição é a partir de todo o boloco.*/
    margin: auto; /*como foi colocado uma max-width, o texto se tornou um bloco, e para a centralização de blocos, usamos o margin: auto.*/
    padding-right: 10px; /* a medida que a tela vai diminuindo o texto vai ficando colado nos cantos da tela, o padding-right e padding-left, servem para deixar um espaçamento nessa parte.*/
    padding-left: 10px;
    padding-bottom: 50px;
    text-shadow: 2px 2px 10px rgba(0, 0, 0, 0.466);    
}

nav{
    background-color: var(--cor5);
    box-shadow: 0px 7px 7px rgba(0, 0, 0, 0.363);
    padding: 10px;        
}

nav > a{
    color: white;
    padding: 10px;
    border-radius: 5px;
    text-decoration: none;
    font-weight: bold;
    transition-duration: 0.5s; /* Deixa o texto com uma leve transição*/
}

nav > a:hover{
    background-color: var(--cor3);
    color: var(--cor5);    
}

main{
    min-width: 300px; /*responsividade de texto*/
    max-width: 1000px; /*responsividade de texto*/
    margin: auto; /*responsividade de texto*/
    margin-bottom: 30px;
    padding: 20px;
    background-color: white;
    box-shadow: 0px 0px 10px rgba(0, 0, 0, 0.521);
    border-bottom-left-radius: 10px; /* Aqui foi especificado porque o comando border-radius funciona de forma cruzada. ex: topo esquerdo e base direita, então, caso queria fazer somente na base, usar o comando separado.*/
    border-bottom-right-radius: 10px;
}

main h1{
    color: var(--cor5);
    font-family: var(--fonte-android);
}

main h2{
    font-family: var(--fonte-android);
    color: var(--cor4);
    font-size: 1.3em;
    background-image: linear-gradient(to right, var(--cor1), transparent);
    text-indent: 8px;
    padding: 5px 0px 5px 0px;
}

main p{ /*interessante essas propriedades de texto, dá para usar como padrão*/
    margin: 15px 0px; /*configuração padrão de texto*/
    text-align: justify; /*configuração padrão de texto*/
    text-indent: 30px; /*espaçamento de primeira linha do parágrafo*/
    font-size: 1em;
    line-height: 2em; /* espaçamento entre linhas*/
}

main strong{
    color: #1a5c37;
    padding: 1px 2px;
}

main a { /*pode ser usado como padrão para configuração de link*/
    text-decoration: none;
    font-weight: bold;
    color: #063d1e;
    background-color: #b9f5d4;
    padding: 2px 6px;
}

main a:hover{ /*pode ser usado como padrão para configuração de link*/
    text-decoration: underline;
    color: #2fa866;
}

main img{
    width: 100%; /*responsividade de imagens*/
}

main img.pequena{ /*bugdroido*/
    max-width: 350px;
    display: block;
    margin: auto;       
}

                /*configuração do vídeo*/

div.video{ /* essa parte é uma gambiarra para adaptação do vídeo do youtube*/
    /*background-color: #063d1e;*/
    margin: 0px -20px 30px -20px; /*margem na parte de baixo do vídeo*/
    padding: 20px;
    padding-bottom: 57%;
    position: relative;
}

div.video > iframe{
    position: absolute;
    top: 5%;
    left: 5%;
    width: 90%;
    height: 90%;
}

                /*configuração aside*/

aside{
    background-color: #83e1ad;
    padding: 10px;
    border-radius: 10px;
    box-shadow: 3px 3px 8px rgba(0, 0, 0, 0.363);
    border: solid 1px green;
}

aside h3{
    background-color: #1a5c37;
    color: white;
    padding: 10px;
    margin: -10px -10px 0px -10px;
    border-radius: 10px 10px 0px 0px;
}

aside > ul{ /*caso não coloque o sinal de maior, o comando pegara todas as ul's que estiverem dentro de aside, colocando o sinal, ela só pegará as que forem filhas.*/
    list-style-type: '\2714\00a0\00a0'; /*o código 2714 foi pego na biblioteca de emojis, o 00a0, dá um espaço sem quebras, e a primeira barra tem que ser posta antes do código do cheque, se não colocar, vai ficar aparecendo o número. só é compatível com google chrome*/
    list-style-position: inside; /*isso coloca a lista dentro da caixa*/
    columns: 2; /*dividi em 2 colunas*/
}

footer{
    background-color: #063d1e;
    color: white;
    text-align: center;
    font-size: 0.8em;
    padding: 5px;
}

footer a{
    color: white;
    font-weight: bolder;
    text-decoration: none;
}

footer a:hover{
    text-decoration: underline;
    color: #b9f5d4;
    
}

